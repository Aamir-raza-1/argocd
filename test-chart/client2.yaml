opentelemetry-collector:
  nameOverride: ""
  fullnameOverride: ""
  config:
    exporters:
      logging: {}
    extensions:
      health_check: {}
    processors:
      batch: {}
      # If set to null, will be overridden with values based on k8s resource limits
    memory_limiter: null
    receivers:
      jaeger:
        protocols:
          grpc:
            endpoint: 0.0.0.0:14250
          thrift_http:
            endpoint: 0.0.0.0:14268
      otlp:
        protocols:
          grpc: null
          http: null
      prometheus:
        config:
          scrape_configs:
            - job_name: opentelemetry-collector
              scrape_interval: 10s
              static_configs:
                - targets:
                    - ${MY_POD_IP}:8888
      zipkin:
        endpoint: 0.0.0.0:9411
    service:
      extensions:
        - health_check
      pipelines:
        logs:
          exporters:
            - logging
          processors:
            - memory_limiter
            - batch
          receivers:
            - otlp
        metrics:
          exporters:
            - logging
          processors:
            - memory_limiter
            - batch
          receivers:
            - otlp
            - prometheus
        traces:
          exporters:
            - logging
          processors:
            - memory_limiter
            - batch
          receivers:
            - otlp
            - jaeger
            - zipkin  
  image:
    repository: otel/opentelemetry-collector
    pullPolicy: IfNotPresent
    tag: ""
  imagePullSecrets: []
  command:
  name: otelcol
  extraArgs: []

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  podSecurityContext: {}
  securityContext: {}

  nodeSelector: {}
  tolerations: []
  affinity: {}

  extraEnvs: []
  extraConfigMapMounts: []
  extraHostPathMounts: []
  secretMounts: []
  service:
    type: ClusterIP
    annotations: {}

